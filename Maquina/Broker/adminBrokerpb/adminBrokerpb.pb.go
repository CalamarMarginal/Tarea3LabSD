// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: adminBrokerpb.proto

package admin

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommandAdmin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TipoComm      string `protobuf:"bytes,1,opt,name=tipoComm,proto3" json:"tipoComm,omitempty"`           //create-update-delete
	NombreDominio string `protobuf:"bytes,2,opt,name=nombreDominio,proto3" json:"nombreDominio,omitempty"` //nombre.dominio
	TipoCambio    string `protobuf:"bytes,3,opt,name=tipoCambio,proto3" json:"tipoCambio,omitempty"`       //nil - <nombre>|<ip>
	ParamNuevo    string `protobuf:"bytes,4,opt,name=paramNuevo,proto3" json:"paramNuevo,omitempty"`       //ip - <valornuevo> - nil
}

func (x *CommandAdmin) Reset() {
	*x = CommandAdmin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adminBrokerpb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandAdmin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandAdmin) ProtoMessage() {}

func (x *CommandAdmin) ProtoReflect() protoreflect.Message {
	mi := &file_adminBrokerpb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandAdmin.ProtoReflect.Descriptor instead.
func (*CommandAdmin) Descriptor() ([]byte, []int) {
	return file_adminBrokerpb_proto_rawDescGZIP(), []int{0}
}

func (x *CommandAdmin) GetTipoComm() string {
	if x != nil {
		return x.TipoComm
	}
	return ""
}

func (x *CommandAdmin) GetNombreDominio() string {
	if x != nil {
		return x.NombreDominio
	}
	return ""
}

func (x *CommandAdmin) GetTipoCambio() string {
	if x != nil {
		return x.TipoCambio
	}
	return ""
}

func (x *CommandAdmin) GetParamNuevo() string {
	if x != nil {
		return x.ParamNuevo
	}
	return ""
}

type RedirectDNS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpDNS string `protobuf:"bytes,1,opt,name=ipDNS,proto3" json:"ipDNS,omitempty"`
}

func (x *RedirectDNS) Reset() {
	*x = RedirectDNS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adminBrokerpb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedirectDNS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedirectDNS) ProtoMessage() {}

func (x *RedirectDNS) ProtoReflect() protoreflect.Message {
	mi := &file_adminBrokerpb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedirectDNS.ProtoReflect.Descriptor instead.
func (*RedirectDNS) Descriptor() ([]byte, []int) {
	return file_adminBrokerpb_proto_rawDescGZIP(), []int{1}
}

func (x *RedirectDNS) GetIpDNS() string {
	if x != nil {
		return x.IpDNS
	}
	return ""
}

var File_adminBrokerpb_proto protoreflect.FileDescriptor

var file_adminBrokerpb_proto_rawDesc = []byte{
	0x0a, 0x13, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x70, 0x62, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0x90, 0x01, 0x0a,
	0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x69, 0x70, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x69, 0x70, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x6f, 0x6d,
	0x62, 0x72, 0x65, 0x44, 0x6f, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6e, 0x6f, 0x6d, 0x62, 0x72, 0x65, 0x44, 0x6f, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x12,
	0x1e, 0x0a, 0x0a, 0x74, 0x69, 0x70, 0x6f, 0x43, 0x61, 0x6d, 0x62, 0x69, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x70, 0x6f, 0x43, 0x61, 0x6d, 0x62, 0x69, 0x6f, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x4e, 0x75, 0x65, 0x76, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x4e, 0x75, 0x65, 0x76, 0x6f, 0x22,
	0x23, 0x0a, 0x0b, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x44, 0x4e, 0x53, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x70, 0x44, 0x4e, 0x53, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69,
	0x70, 0x44, 0x4e, 0x53, 0x32, 0x52, 0x0a, 0x12, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x0f, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x12, 0x13, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x1a, 0x12, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x44, 0x4e, 0x53, 0x22, 0x00, 0x42, 0x02, 0x5a, 0x00, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_adminBrokerpb_proto_rawDescOnce sync.Once
	file_adminBrokerpb_proto_rawDescData = file_adminBrokerpb_proto_rawDesc
)

func file_adminBrokerpb_proto_rawDescGZIP() []byte {
	file_adminBrokerpb_proto_rawDescOnce.Do(func() {
		file_adminBrokerpb_proto_rawDescData = protoimpl.X.CompressGZIP(file_adminBrokerpb_proto_rawDescData)
	})
	return file_adminBrokerpb_proto_rawDescData
}

var file_adminBrokerpb_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_adminBrokerpb_proto_goTypes = []interface{}{
	(*CommandAdmin)(nil), // 0: admin.CommandAdmin
	(*RedirectDNS)(nil),  // 1: admin.RedirectDNS
}
var file_adminBrokerpb_proto_depIdxs = []int32{
	0, // 0: admin.AdminBrokerService.AdminBrokerComm:input_type -> admin.CommandAdmin
	1, // 1: admin.AdminBrokerService.AdminBrokerComm:output_type -> admin.RedirectDNS
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_adminBrokerpb_proto_init() }
func file_adminBrokerpb_proto_init() {
	if File_adminBrokerpb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_adminBrokerpb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandAdmin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adminBrokerpb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedirectDNS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_adminBrokerpb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_adminBrokerpb_proto_goTypes,
		DependencyIndexes: file_adminBrokerpb_proto_depIdxs,
		MessageInfos:      file_adminBrokerpb_proto_msgTypes,
	}.Build()
	File_adminBrokerpb_proto = out.File
	file_adminBrokerpb_proto_rawDesc = nil
	file_adminBrokerpb_proto_goTypes = nil
	file_adminBrokerpb_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AdminBrokerServiceClient is the client API for AdminBrokerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdminBrokerServiceClient interface {
	// admin envia comando -> broker redirige a dns
	AdminBrokerComm(ctx context.Context, in *CommandAdmin, opts ...grpc.CallOption) (*RedirectDNS, error)
}

type adminBrokerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAdminBrokerServiceClient(cc grpc.ClientConnInterface) AdminBrokerServiceClient {
	return &adminBrokerServiceClient{cc}
}

func (c *adminBrokerServiceClient) AdminBrokerComm(ctx context.Context, in *CommandAdmin, opts ...grpc.CallOption) (*RedirectDNS, error) {
	out := new(RedirectDNS)
	err := c.cc.Invoke(ctx, "/admin.AdminBrokerService/AdminBrokerComm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdminBrokerServiceServer is the server API for AdminBrokerService service.
type AdminBrokerServiceServer interface {
	// admin envia comando -> broker redirige a dns
	AdminBrokerComm(context.Context, *CommandAdmin) (*RedirectDNS, error)
}

// UnimplementedAdminBrokerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAdminBrokerServiceServer struct {
}

func (*UnimplementedAdminBrokerServiceServer) AdminBrokerComm(context.Context, *CommandAdmin) (*RedirectDNS, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminBrokerComm not implemented")
}

func RegisterAdminBrokerServiceServer(s *grpc.Server, srv AdminBrokerServiceServer) {
	s.RegisterService(&_AdminBrokerService_serviceDesc, srv)
}

func _AdminBrokerService_AdminBrokerComm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommandAdmin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminBrokerServiceServer).AdminBrokerComm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admin.AdminBrokerService/AdminBrokerComm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminBrokerServiceServer).AdminBrokerComm(ctx, req.(*CommandAdmin))
	}
	return interceptor(ctx, in, info, handler)
}

var _AdminBrokerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "admin.AdminBrokerService",
	HandlerType: (*AdminBrokerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AdminBrokerComm",
			Handler:    _AdminBrokerService_AdminBrokerComm_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "adminBrokerpb.proto",
}
